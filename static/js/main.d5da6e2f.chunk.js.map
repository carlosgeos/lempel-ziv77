{"version":3,"sources":["logo.svg","LZtableRow.jsx","LZtable.jsx","LZinput.jsx","LZlegend.jsx","App.jsx","index.js"],"names":["module","exports","withStyles","window","backgroundColor","borderRadius","buffer","props","next_char","row_info","TableRow","TableCell","className","index","head","classes","tail","offset","distance","styles","lztable","marginTop","fontSize","border","padding","boxShadow","lztableheading","background","lztableheadingcell","lztablecell","fontFamily","table_rows","dict_info","map","key","Table","TableHead","TableBody","LZinput","input_style","Grid","container","spacing","item","xs","md","TextField","inputProps","style","InputLabelProps","shrink","type","name","label","value","window_size","onChange","handleChange","fullWidth","buffer_size","legend","window_legend","display","width","height","buffer_legend","Typography","variant","align","App","state","input_str","dict","bind","search_window","j","length","to_match","substring","includes","lastIndexOf","rest_of_buffer","k","charAt","this","w","parseInt","b","i","prefix_info","prefix_exists","setState","prevstate","event","target","lz","maxWidth","CssBaseline","src","logo","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5da6e2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  window: {\n    backgroundColor: '#FE6B8B',\n    borderRadius: '6px',\n  },\n  buffer: {\n    backgroundColor: '#FF8E53',\n    borderRadius: '6px',\n  }\n};\n\nfunction LZtableRow (props) {\n  const next_char = props.row_info.next_char ? props.row_info.next_char : \"‚ä•\";\n  return (\n    <TableRow>\n      <TableCell className={ props.className }>{ props.index }</TableCell>\n      <TableCell className={ props.className }>\n        <span>{props.row_info.head}</span>\n        <span className={ props.classes.window }>{ props.row_info.window }</span>\n        <span className={ props.classes.buffer }>{ props.row_info.buffer }</span>\n        <span>{ props.row_info.tail }</span>\n      </TableCell>\n      <TableCell className={ props.className }>&lt;{ props.row_info.offset }, { props.row_info.distance }, { next_char }&gt;</TableCell>\n    </TableRow>\n  );\n}\n\nexport default withStyles(styles)(LZtableRow);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport LZtableRow from 'LZtableRow';\n\nconst styles = {\n  lztable: {\n    marginTop: '20px',\n    fontSize: '1.5rem !important',\n    border: 0,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  lztableheading: {\n    background: 'rgb(254,107,139)',\n    background: '-moz-linear-gradient(90deg, rgba(254,107,139,1) 0%, rgba(255,142,83,1) 100%)',\n    background: '-webkit-linear-gradient(90deg, rgba(254,107,139,1) 0%, rgba(255,142,83,1) 100%)',\n    background: 'linear-gradient(90deg, rgba(254,107,139,1) 0%, rgba(255,142,83,1) 100%)',\n    backgroundAttachment: 'fixed', // safari fix\n    border: 0,\n  },\n  lztableheadingcell: {\n    fontSize: '1.7rem',\n  },\n  lztablecell: {\n    fontSize: '1.3rem',\n    fontFamily: 'Roboto Mono, Lucida Console, DejaVu Sans Mono, Monaco, monospace'\n  },\n};\n\nfunction LZtable (props) {\n  const dict_info = props.dict_info;\n  const table_rows = dict_info.map((row_info, index) => {\n    return (\n      <LZtableRow className={ props.classes.lztablecell }\n                  key={ index }\n                  index={ index }\n                  row_info={ row_info }\n      />\n    );\n  });\n  return (\n    <Table className={props.classes.lztable}>\n      <TableHead className={props.classes.lztableheading}>\n        <TableRow>\n          <TableCell className={ props.classes.lztableheadingcell }>\n            Step\n          </TableCell>\n          <TableCell className={ props.classes.lztableheadingcell }>\n            Window & Buffer\n          </TableCell>\n          <TableCell className={ props.classes.lztableheadingcell }>\n            &lt;Offset, Length, Next Char&gt;\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {table_rows}\n      </TableBody>\n    </Table>\n  );\n}\n\n\nexport default withStyles(styles)(LZtable);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n\nfunction LZinput (props) {\n  const input_style = {\n    fontSize: '2.5rem',\n  };\n\n  const label_style = {\n    fontSize: '1.6rem',\n  };\n\n  return (\n    <Grid container spacing={24}>\n      <Grid item xs={6} md={2}>\n        <TextField inputProps={{ style: input_style }}\n                   InputLabelProps={{ shrink: true }}\n                   type=\"text\"\n                   name=\"window_size\"\n                   label=\"Window size\"\n                   value={props.window_size}\n                   onChange={props.handleChange}\n                   fullWidth\n        />\n      </Grid>\n      <Grid item xs={6} md={2}>\n        <TextField inputProps={{ style: input_style }}\n                   InputLabelProps={{ shrink: true }}\n                   type=\"text\"\n                   name=\"buffer_size\"\n                   label=\"Buffer size\"\n                   value={props.buffer_size}\n                   onChange={props.handleChange}\n                   fullWidth\n        />\n      </Grid>\n      <Grid item xs={12} md={8}>\n        <TextField inputProps={{ style: input_style }}\n                   InputLabelProps={{ style: label_style }}\n                   type=\"text\"\n                   name=\"input_str\"\n                   label=\"Input string\"\n                   onChange={ props.handleChange }\n                   fullWidth\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\n\nexport default LZinput;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  legend: {\n    marginTop: '40px',\n  },\n  window_legend: {\n    display: 'inline-block',\n    width: '1rem',\n    height: '1rem',\n    borderRadius: '6px',\n    backgroundColor: '#FE6B8B',\n  },                          // total DRY\n  buffer_legend: {\n    display: 'inline-block',\n    width: '1rem',\n    height: '1rem',\n    borderRadius: '6px',\n    backgroundColor: '#FF8E53',\n  }\n};\n\nfunction LZlegend (props) {\n  return (\n    <div className={props.classes.legend}>\n      <Typography variant='subtitle1' align='left'>Window = <span className={props.classes.window_legend}></span></Typography>\n      <Typography variant='subtitle1' align='left'>Buffer = <span className={props.classes.buffer_legend}></span></Typography>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(LZlegend);\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport LZtable from 'LZtable';\nimport LZinput from 'LZinput';\nimport LZlegend from 'LZlegend';\nimport logo from 'logo.svg';\nimport 'typeface-roboto';\nimport 'App.scss';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {input_str: '',\n                  window_size: 6,\n                  buffer_size: 4,\n                  dict: []};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  prefix_exists (search_window, buffer) {\n    // helper method to determine if a prefix exists in the search\n    // window\n    for (var j = 0; j < buffer.length; j++) {\n      let to_match = buffer.substring(0, buffer.length - j);\n      if (search_window.includes(to_match)) {\n        let offset = search_window.length - search_window.lastIndexOf(to_match);\n        let distance = to_match.length;\n        if (offset === distance) { // maybe extends into lookahead buffer\n          let rest_of_buffer = buffer.substring(buffer.length - j, buffer.length);\n          let k = 0;\n          while((rest_of_buffer.charAt(k) === to_match.charAt(k)) &&\n                k < rest_of_buffer.length) {\n            distance++;\n            k++;\n          }\n        }\n        return [offset, distance];\n      }\n    }\n    return false;\n  }\n\n  lz () {\n    // lz77 algorithm\n    const input_str = this.state.input_str;\n    const w = parseInt(this.state.window_size, 10);\n    const b = parseInt(this.state.buffer_size, 10);\n\n    let i = 0;\n    while (i < input_str.length) {\n      const head = input_str.substring(0, i - w);\n      const search_window = input_str.substring(i - w, i);\n      const buffer = input_str.substring(i, i + b);\n      const tail = input_str.substring(i + b);\n      let offset = 0;\n      let distance = 0;\n      let next_char = buffer.charAt(0);\n\n      const prefix_info = this.prefix_exists(search_window, buffer);\n\n      if (prefix_info) {\n        offset = prefix_info[0];\n        distance = prefix_info[1];\n        next_char = input_str.charAt(i + distance);\n        i = i + distance + 1;\n      } else {\n        i++;\n      }\n      // add the table row info to state\n      this.setState((prevstate) => {\n        // updater function to read up-to-date state\n        return {dict: [...prevstate.dict, {\n          \"head\": head,\n          \"window\": search_window,\n          \"buffer\": buffer,\n          \"tail\": tail,\n          \"offset\": offset,\n          \"distance\": distance,\n          \"next_char\": next_char\n        }]};\n      });\n    }\n  }\n\n  handleChange(event) {\n    // generalized change handler using 'computer property names'\n    // - ES2015 only\n    this.setState({[event.target.name]: event.target.value,\n                   dict: []}, // clean dict\n                  this.lz); // lz is calledback when setState\n    // finishes, we are sure to get the\n    // correct input fields\n  }\n\n  render() {\n    return (\n      <div style={{maxWidth: 1200, padding: 50}} className=\"App\">\n        <CssBaseline />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Typography variant=\"h4\">LZ77 compression algorithm</Typography>\n        </header>\n\n        <LZinput window_size={this.state.window_size} buffer_size={this.state.buffer_size} handleChange={this.handleChange}/>\n        <LZlegend/>\n        <LZtable dict_info={this.state.dict}/>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}